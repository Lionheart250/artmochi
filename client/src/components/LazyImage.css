.lazy-image-container {
  position: relative;
  overflow: hidden;
  background-color: #121212;
  width: 100%;
  height: 100%;
}

.lazy-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: opacity 0.5s ease-out;
  opacity: 0;
}

.lazy-image.loaded {
  opacity: 1;
}

/* High-quality TV Static Effect - completely revised */
.lazy-image-placeholder {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #080808;
  overflow: hidden;
  animation: flicker 8s infinite step-end;
}

/* Primary static layer - this is the main noise */
.lazy-image-placeholder::before {
  content: "";
  position: absolute;
  top: -100%;
  left: -100%;
  right: -100%;
  bottom: -100%;
  background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 1024 1024' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.75' numOctaves='5' stitchTiles='stitch' seed='0'/%3E%3CfeColorMatrix type='saturate' values='0'/%3E%3CfeComponentTransfer%3E%3CfeFuncR type='linear' slope='3' intercept='-0.2'/%3E%3CfeFuncG type='linear' slope='3' intercept='-0.2'/%3E%3CfeFuncB type='linear' slope='3' intercept='-0.2'/%3E%3C/feComponentTransfer%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
  opacity: 0.2;
  transform: scale(1.5);
  animation: staticMove 0.15s steps(3) infinite;
  mix-blend-mode: screen;
}

/* Secondary static overlay for more texture */
.lazy-image-placeholder::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  /* Horizontal scan lines */
  background: repeating-linear-gradient(
    to bottom,
    rgba(255, 255, 255, 0.02) 0px,
    rgba(255, 255, 255, 0.05) 1px,
    rgba(255, 255, 255, 0.02) 2px,
    rgba(0, 0, 0, 0.1) 3px,
    rgba(0, 0, 0, 0.1) 4px
  );
  /* Add some noise to scan lines as well */
  background-blend-mode: overlay;
  animation: scanlineMove 6s linear infinite;
  pointer-events: none;
}

/* Insert another element for vertical hold issues */
.lazy-image-container:has(.lazy-image-placeholder:not(.loaded))::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(transparent 30%, rgba(0, 0, 0, 0.3) 30.3%, transparent 30.6%);
  opacity: 0;
  animation: verticalHoldIssue 6s infinite;
  pointer-events: none;
  z-index: 2;
}

/* Improved animations for more realistic static */
@keyframes staticMove {
  0% { transform: translate(0, 0) scale(1.5); }
  25% { transform: translate(-1%, 1%) scale(1.5); }
  50% { transform: translate(1%, -0.5%) scale(1.5); }
  75% { transform: translate(-0.5%, -1%) scale(1.5); }
  100% { transform: translate(0, 0) scale(1.5); }
}

@keyframes scanlineMove {
  0% { background-position: 0 0; }
  100% { background-position: 0 1024px; }
}

@keyframes flicker {
  0%, 5%, 10%, 15%, 20%, 25%, 30%, 35%, 40%, 45%, 50%, 55%, 60%, 65%, 70%, 75%, 80%, 85%, 90%, 95%, 100% { opacity: 1; }
  2%, 57%, 62%, 97% { opacity: 0.8; }
  3%, 37%, 76% { opacity: 0.6; }
  17%, 23% { opacity: 0.2; transform: translateX(2px); }
  18% { opacity: 0.8; transform: translateX(-2px); }
  19% { opacity: 1; transform: translateX(0); }
  88% { opacity: 0.4; transform: translateX(-1px); }
  89% { opacity: 0.8; transform: translateX(1px); }
}

@keyframes verticalHoldIssue {
  0%, 95%, 100% { opacity: 0; transform: translateY(0); }
  30%, 40% { opacity: 0.5; transform: translateY(30px); }
  31%, 39% { opacity: 0.2; transform: translateY(0); }
  32%, 38% { opacity: 0.5; transform: translateY(20px); }
  33%, 37% { opacity: 0.2; transform: translateY(0); }
}

/* Error state styling - keep monochromatic */
.lazy-image-error {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: #1a1a1a;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 1rem;
  box-sizing: border-box;
}

.error-icon {
  width: 30px;
  height: 30px;
  border: 2px solid #ffffff;
  border-radius: 50%;
  position: relative;
  margin-bottom: 10px;
}

.error-icon::before,
.error-icon::after {
  content: '';
  position: absolute;
  background-color: #ffffff;
  top: 50%;
  left: 50%;
}

.error-icon::before {
  width: 2px;
  height: 15px;
  margin-top: -7.5px;
  margin-left: -1px;
  transform: rotate(45deg);
}

.error-icon::after {
  width: 15px;
  height: 2px;
  margin-top: -1px;
  margin-left: -7.5px;
  transform: rotate(45deg);
}

.error-message {
  font-family: 'Roboto Mono', monospace;
  color: #ffffff;
  font-size: 12px;
  text-align: center;
  max-width: 90%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: normal;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  line-height: 1.4;
}

/* Animations */
@keyframes placeholderLine {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

@keyframes placeholderPulse {
  0% {
    opacity: 0.3;
  }
  100% {
    opacity: 0.8;
  }
}